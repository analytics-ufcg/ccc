salarios <- read.csv( http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv)
salarios <- read.csv(http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv)
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
salarios
salarios$UF
salarios
?write.table
salarios.lenght
salarios
?salarios
??salarios
nrow(salarios)
ncol(salarios)
salarios
salariosResp <- write.table(questao1.frame(salarios))
salariosResp <- write.table(salarios.frame(salarios))
salariosResp <- write.table(salarios)
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
salariosResp <- write.table(salarios)
write.table(salarios)
write.table(salarios)
fix(salariosResp)
estados <- salarios$UF
estados
names(estados)
estados[1]
estados[2]
estados[4]
estados[163]
estados[162]
ls()
rm(salariosResp)
for(i in lenght(estados))
as
for(i in estados.lenght())
a
for(i in estados)
a
if(estados[i] == "PB")
regiao <- c(regiao, "Nordeste")
if(estados[i] == "PB") == TRUE
if(estados[i] == "PB")
regiao <- c(regiao, "Nordeste")
if(estados[i] == "PB")
regiao <- c("Nordeste")
if(estados[i] == "PB")
regiao <- c("Nordeste", TRUE)
if(estados[1] == "PB")
regiao <- c(regiao, "Nordeste")
if(estados[1] == "PB")
regiao <- c("Nordeste")
rm(regiao)
estados
for(i in estados)
if(estados[i] == "PB" || estados[i] == "AL" || estados[i] == "CE" || estados[i] == "BA" || estados[i] == "SE")
regiao <- c("Nordeste")
if(i == "PB" || estados[i] == "AL" || estados[i] == "CE" || estados[i] == "BA" || estados[i] == "SE")
as
for(i in estados)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE")
regiao <- c("Nordeste")
regiao[]
estados
regiao <- vector()
for(i in estados)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
regiao
fix(regiao)
fix(estados)
View(salarios)
if(i == "")
regiao <- vector(162)
for(i in estados)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
regiao
rm()
rm(regiao)
regiao <- vector(162)
for(i in estados)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
regiao <- vector()
for(i in estados)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
regaio
regiao
rm(i)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
if(estados == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
write.table(salarios)
if(estados == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste"
fix(regiao)
rm(regiao)
if(estados == "PB" || estados == "AL" || estados == "CE" || estados == "BA" || estados == "SE" || estados == "PE")
regiao <- c(regiao,"Nordeste")
regiao <- vector
if(estados == "PB" || estados == "AL" || estados == "CE" || estados == "BA" || estados == "SE" || estados == "PE")
regiao <- c(regiao,"Nordeste")
regiao
regiao <- vector()
if(estados == "PB" || estados == "AL" || estados == "CE" || estados == "BA" || estados == "SE" || estados == "PE")
regiao <- c(regiao,"Nordeste")
if(estados == "DF" || estados == "GO" || estados == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(estados == "MG"|| estados == "RJ" || estados == "SP")
regiao <- c(regiao, "Sudeste")
regiao
estados
regiao <- frame("AL" = "Nordeste")
regiao <- data.frame("AL" = "Nordeste")
regiao
View(salarios)
View(regiao)
regiao <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao
estados <- salarios$UF
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = d[i]
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = regiaoFrame[i]
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
estados <- salarios$UF
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = regiaoFrame[i]
write.table(salarios)
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
estados <- salarios$UF
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = regiaoFrame[i]
regiaoFrame
regiao
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame(Regiao = c())
for(i in estados)
regiao[i] = regiaoFrame[i]
regiao <- data.frame(Regiao = c(regiaoFrame[i]))
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame(Regiao = c())
for(i in estados)
regiao <- data.frame(Regiao = c(regiaoFrame[i]))
i
for(i in estados)
i
for(i in estados)
print i
print (i)
for(i in estados)
print (i)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta função retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e está em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A saída seria 5 (quinto período).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$periodo
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,6), substring(as.character(notaDisciplDF$matricula), 2,4))
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta função retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e está em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A saída seria 5 (quinto período).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 3,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
View(notaDisciplDF)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta função retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e está em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A saída seria 5 (quinto período).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
if (as.integer(substring(as.character(pEntrada), 1, 1)) == 9) {
resultExtra = 100 - as.integer(substring(as.character(pEntrada), 1, 2))
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2))) + resultExtra
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
} else{
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
}
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 3,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
View(notaDisciplDF)
calcularPeriodoRelativo <- function(pAtual, pEntrada){
if (as.integer(substring(as.character(pEntrada), 1, 2)) > 50) {
resultExtra = 100 - as.integer(substring(as.character(pEntrada), 1, 2))
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2))) + resultExtra
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
} else{
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
}
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 3,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
if(as.integer(substring(as.character(pEntrada), 1, 2)) > 100){
nota =1
}
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
if(as.integer(substring(as.character(pEntrada), 1, 2)) > 100){
nota =1
}
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 3,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 4, 4)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
if(as.integer(substring(as.character(pEntrada), 1, 2)) > 50){
nota =1
}
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 3,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
calcularPeriodoRelativo <- function(pAtual, pEntrada){
if(as.integer(substring(as.character(pEntrada), 1, 2)) > 90){
resultado = 1900 + as.integer(substring(as.character(pEntrada), 1, 2))
} else{
resultado = 2000 + as.integer(substring(as.character(pEntrada), 1, 2)))
}
result = 2 * (as.integer(substring(as.character(pAtual), 1, 4)) - resultado)
result = result + (as.integer(substring(as.character(pAtual), 6, 6)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 1,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
calcularPeriodoRelativo <- function(pAtual, pEntrada){
if(as.integer(substring(as.character(pEntrada), 1, 2)) > 90){
resultado = 1900 + as.integer(substring(as.character(pEntrada), 1, 2))
} else{
resultado = 2000 + as.integer(substring(as.character(pEntrada), 1, 2))
}
result = 2 * (as.integer(substring(as.character(pAtual), 1, 4)) - resultado)
result = result + (as.integer(substring(as.character(pAtual), 6, 6)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 1,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
calcularPeriodoRelativo <- function(pAtual, pEntrada){
if((as.integer(substring(as.character(pEntrada), 1, 2))) > 90){
resultado = 1900 + as.integer(substring(as.character(pEntrada), 1, 2))
} else{
resultado = 2000 + as.integer(substring(as.character(pEntrada), 1, 2))
}
result = 2 * (as.integer(substring(as.character(pAtual), 1, 4)) - resultado)
result = result + (as.integer(substring(as.character(pAtual), 6, 6)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csvfa')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 1,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
notaDisciplDF$MATRICULA
View(notaDisciplDF)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta função retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e está em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A saída seria 5 (quinto período).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
if((as.integer(substring(as.character(pEntrada), 1, 2))) > 90){
resultado = 1900 + as.integer(substring(as.character(pEntrada), 1, 2))
} else{
resultado = 2000 + as.integer(substring(as.character(pEntrada), 1, 2))
}
result = 2 * (as.integer(substring(as.character(pAtual), 1, 4)) - resultado)
result = result + (as.integer(substring(as.character(pAtual), 6, 6)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('/home/celio/Downloads/Dados_historicos_de_notas-Computacao.csv')
notaDisciplDF[8] = notaDisciplDF$PERIODO
colnames(notaDisciplDF)[8] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 1,6), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
library(RODBC)
cn <- odbcConnect("VerticaDSN")
install.packages("RODBC")
install.packages("RODBC")
library(RODBC)
cn <- odbcConnect("VerticaDSN")
cn <- odbcConnect("VerticaDSN")
sqlTables(cn)
cn <- odbcConnect("VerticaDSN")
cn <- odbcConnect("VerticaDSN")
cn <- odbcConnect("Vertica")
D
cn <- odbcConnect("VerticaDSN")
library(RODBC)
cn <- odbcConnect("VerticaDSN")
res <- sqlQuery(cn, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, s.NomeSituacao, da.MatriculaAluno, da.Media from Disciplina d, DisciplinaAluno da, Situacao s where d.CodigoDisciplina = da.CodigoDisciplina and da.CodigoSituacao = s.CodigoSituacao")
View(res)
res <- sqlQuery(cn, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, s.NomeSituacao, da.MatriculaAluno, da.Media from Disciplina d, DisciplinaAluno da, Situacao s where d.CodigoDisciplina = da.CodigoDisciplina and da.CodigoSituacao != s.CodigoSituacao")
View(res)
res <- sqlQuery(cn, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, s.NomeSituacao, da.MatriculaAluno, da.Media from Disciplina d, DisciplinaAluno da, Situacao s where d.CodigoDisciplina = da.CodigoDisciplina and da.CodigoSituacao = s.CodigoSituacao")
View(res)
sqlQuery(cn, "Situacao")
sqlFetch(cn, "Situacao")
sqlFetch(cn, "DisciplinaAluno")
c <- sqlFetch(cn, "DisciplinaAluno")
View(c)
res <- sqlQuery(cn, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, de.NomeDepto, da.MatriculaAluno, da.Media, s.NomeSituacao from Disciplina d, DisciplinaAluno da, Situacao s, Departamento de where d.CodigoDisciplina = da.CodigoDisciplina and da.CodigoSituacao = s.CodigoSituacao and d.CodigoDepto = de.CodigoDepto")
View(res)
res <- sqlQuery(cn, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, de.NomeDepto, da.MatriculaAluno, da.Media, s.NomeSituacao from Disciplina d, DisciplinaAluno da, Situacao s, Departamento de where d.CodigoDisciplina = da.CodigoDisciplina and d.CodigoDepto = de.CodigoDepto")
View(res)
setwd('/home/celio/Desenvolvimento/ccc/ccc-analytics-2.0')
notaDisciplDF = read.csv('data/historico-ccc.csv')
View(notaDisciplDF)
source('src/R/funcao_Disciplina_Por_Periodo.R')
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/historico-ccc.csv')
notaDisciplDF[8] = NA
colnames(notaDisciplDF)[8] <- "PERIODORELATIVO"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PERIODORELATIVO = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 3,5), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
View(notaDisciplDF)
min(notaDisciplDF$PERIODORELATIVO)
max(notaDisciplDF$PERIODORELATIVO)
library(RODBC)
cn <- odbcConnect("VerticaDSN")
res <- sqlQuery(cn, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, de.NomeDepto, da.MatriculaAluno, da.Media from Disciplina d, DisciplinaAluno da, Departamento de where d.CodigoDisciplina = da.CodigoDisciplina and d.CodigoDepto = de.CodigoDepto")
View(res)
min(res$Media)
min(res$CodigoDisciplina)
min(res$Periodo)
View(res)
#Chama a funcao de calcular o periodo da disciplina
source('src/R/funcao_Disciplina_Por_Periodo.R')
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/historico-ccc.csv')
notaDisciplDF[8] = NA
colnames(notaDisciplDF)[8] <- "PERIODORELATIVO"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PERIODORELATIVO = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$PERIODO), 3,5), substring(as.character(notaDisciplDF$MATRICULA), 2,4))
View(notaDisciplDF)
notaDisciplDF
notaDisciplDF[is.na(notaDisciplDF$PERIODORELATIVO)]
notaDisciplDF[is.na(notaDisciplDF$PERIODORELATIVO),]
min(notaDisciplDF$PERIODORELATIVO)
max(notaDisciplDF$PERIODORELATIVO)
