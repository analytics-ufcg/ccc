blocMaisComum2 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq2nd)),]
blocMaisComum3 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq3rd)),]
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
View(notaDisciplDF)
View(tabelaFrequencia)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo), nrow)
View(tabelaFrequencia)
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
View(tabelaFrequencia)
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
warnings(0)
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "matricula"), timevar = "PeriodoRelativo", direction = "wide")
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "matricula"), timevar = "PeriodoRelativo", direction = "wide")
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "matricula"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
tabelaFrequencia[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
colunasUteis = 3:18
tabelaFrequencia[,colunasUteis][is.na(tabelaFrequencia[,colunasUteis])] = 0
View(tabelaFrequencia)
colunasUteis = 4:19
tabelaFrequencia[,colunasUteis][is.na(tabelaFrequencia[,colunasUteis])] = 0
View(tabelaFrequencia)
max.col(freqAbsluta[4:19])
max.col(tabelaFrequencia[4:19])
min(tabelaFrequencia[4:19])
!min(tabelaFrequencia[4:19])
pmin(tabelaFrequencia[4:19])
pmin.int(tabelaFrequencia[4:19])
discMaisComumPeriodo = tabelaFrequencia[, c("coddisciplina", "disciplina", "matricula")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(tabelaFrequencia[colunasUteis], 1, max.col)
View(discMaisComumPeriodo)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "matricula"), timevar = "PeriodoRelativo", direction = "wide", row.names = FALSE)
View(tabelaFrequencia)
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo), nrow, row.names = FALSE)
View(discMaisComumPeriodo)
discMaisComumPeriodo = tabelaFrequencia[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(tabelaFrequencia[colunasUteis], 1, max.col)
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "matricula"), timevar = "PeriodoRelativo", direction = "wide")
tabelaFrequencia[,colunasUteis][is.na(tabelaFrequencia[,colunasUteis])] = 0
colunasUteis = 4:19
discMaisComumPeriodo = tabelaFrequencia[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(tabelaFrequencia[colunasUteis], 1, max.col)
View(discMaisComumPeriodo)
View(notaDisciplDF)
#Deve-se setar o Working Directory, setwd(), para o diret√≥rio "ccc-analytics-2.0" antes de esecutar este script
#Defini√ß√µes de fun√ß√µes √∫teis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos per√≠odos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para opera√ß√µes aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um per√≠odo letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
View(freqAbsluta)
View(discMaisComumPeriodo)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "matricula"), timevar = "PeriodoRelativo", direction = "wide")
tabelaFrequencia[,colunasUteis][is.na(tabelaFrequencia[,colunasUteis])] = 0
colunasUteis = 4:19
tabelaFrequencia[,colunasUteis][is.na(tabelaFrequencia[,colunasUteis])] = 0
View(tabelaFrequencia)
View(notaDisciplDF)
discMaisComumPeriodo = tabelaFrequencia[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(tabelaFrequencia[colunasUteis], 1, max.col)
View(discMaisComumPeriodo)
View(tabelaFrequencia)
View(notaDisciplDF)
View(discMaisComumPeriodo)
View(notaDisciplDF)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
colunasUteis = 4:19
tabelaFrequencia[,colunasUteis][is.na(tabelaFrequencia[,colunasUteis])] = 0
colunasUteis = 3:18
tabelaFrequencia[,colunasUteis][is.na(tabelaFrequencia[,colunasUteis])] = 0
View(tabelaFrequencia)
View(notaDisciplDF)
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
View(tabelaFrequencia)
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo, matricula), nrow)
View(tabelaFrequencia)
View(tabelaFrequencia)
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo, matricula), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo, matricula), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
View(tabelaFrequencia)
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo), nrow)
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
View(tabelaFrequencia)
tabelaUnica <- unique(tabelaFrequencia[1:3])
View(tabelaUnica)
tabelaUnica <- unique(tabelaFrequencia)
View(tabelaFrequencia)
tabelaUnica <- unique(c(tabelaFrequencia[2], tabelaFrequencia[4]))
fix(tabelaUnica)
tabelaFrequencia[2]
tabelaFrequencia[1]
tabelaUnica <- unique(c(tabelaFrequencia[1], tabelaFrequencia[3]))
fix(tabelaUnica)
c(tabelaFrequencia[1], tabelaFrequencia[3])
tabelaUnica <- unique(tabelaFrequencia[,c("coddisciplina", "matricula")])
View(tabelaUnica)
tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
teste <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
View(teste)
View(teste)
View(tabelaFrequencia)
View(notaDisciplDF)
View(tabelaFrequencia)
View(notaDisciplDF)
View(teste)
View(notaDisciplDF)
View(teste)
View(notaDisciplDF)
View(tabelaFrequencia)
View(tabelaFrequencia)
View(notaDisciplDF)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaUnica <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
View(tabelaUnica)
View(tabelaFrequencia)
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
rm(tabelaUnica)
View(tabelaFrequencia)
tabelaFrequencia$row.names <- NULL
tabelaFrequencia$V1 <- NULL
View(tabelaFrequencia)
tabelaFrequencia$row.names <- NULL
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "matricula", "situacao"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
tabelaFrequencia$row.names <- NULL
tabelaFrequencia$V1 <- NULL
tabelaFrequencia$matricula <- NULL
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "situacao"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina", "situacao"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
View(tabelaFrequencia)
tabelaFrequencia$row.names <- NULL
tabelaFrequencia$V1 <- NULL
tabelaFrequencia$matricula <- NULL
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
warnings()
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
tabelaFrequencia$row.names <- NULL
tabelaFrequencia$V1 <- NULL
tabelaFrequencia$matricula <- NULL
tabelaFrequencia$situacao <- NULL
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
# Antes de executar este script, deve-se setar o Working Directory para "ccc-analytics-2.0 /" conforme seu reposit√≥rio local
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas_periodo.csv')
install.packages("reshape")
require(plyr)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
View(tabelaFrequencia)
View(notaDisciplDF)
View(tabelaFrequencia)
# Antes de executar este script, deve-se setar o Working Directory para "ccc-analytics-2.0 /" conforme seu reposit√≥rio local
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas_periodo.csv')
install.packages("reshape")
require(plyr)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta fun√É¬ß√É¬£o retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e est√É¬° em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A sa√É≠da seria 5 (quinto per√É≠odo).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
install.packages("reshape")
require(plyr)
#Deve-se setar o Working Directory, setwd(), para o diret√É¬≥rio "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
tabelaFrequencia$row.names <- NULL
tabelaFrequencia$matricula <- NULL
tabelaFrequencia$situacao <- NULL
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
tabelaFrequencia$matricula <- NULL
tabelaFrequencia$situacao <- NULL
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
View(tabelaFrequencia)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
View(tabelaFrequencia)
tabelaFrequencia$matricula <- NULL
tabelaFrequencia$situacao <- NULL
View(tabelaFrequencia)
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
tabelaFrequencia$matricula <- NULL
tabelaFrequencia$situacao <- NULL
View(tabelaFrequencia)
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
warnings(0)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, matricula, PeriodoRelativo, situacao), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
tabelaFrequencia <- tabelaFrequencia[!duplicated(tabelaFrequencia[,c('coddisciplina','matricula')]),]
tabelaFrequencia$matricula <- NULL
tabelaFrequencia$situacao <- NULL
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), direction = "wide")
