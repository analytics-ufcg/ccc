if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
regiao
rm()
rm(regiao)
regiao <- vector(162)
for(i in estados)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
regiao <- vector()
for(i in estados)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
regaio
regiao
rm(i)
if(i == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste")
if(estados == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
write.table(salarios)
if(estados == "PB" || i == "AL" || i == "CE" || i == "BA" || i == "SE" || i == "PE")
regiao <- c(regiao,"Nordeste")
if(i == "DF" || i == "GO" || i == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(i == "MG"|| i == "RJ" || i == "SP")
regiao <- c(regiao, "Sudeste"
fix(regiao)
rm(regiao)
if(estados == "PB" || estados == "AL" || estados == "CE" || estados == "BA" || estados == "SE" || estados == "PE")
regiao <- c(regiao,"Nordeste")
regiao <- vector
if(estados == "PB" || estados == "AL" || estados == "CE" || estados == "BA" || estados == "SE" || estados == "PE")
regiao <- c(regiao,"Nordeste")
regiao
regiao <- vector()
if(estados == "PB" || estados == "AL" || estados == "CE" || estados == "BA" || estados == "SE" || estados == "PE")
regiao <- c(regiao,"Nordeste")
if(estados == "DF" || estados == "GO" || estados == "MT")
regiao <- c(regiao, "Centro-Oeste")
if(estados == "MG"|| estados == "RJ" || estados == "SP")
regiao <- c(regiao, "Sudeste")
regiao
estados
regiao <- frame("AL" = "Nordeste")
regiao <- data.frame("AL" = "Nordeste")
regiao
View(salarios)
View(regiao)
regiao <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao
estados <- salarios$UF
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = d[i]
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = regiaoFrame[i]
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
estados <- salarios$UF
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = regiaoFrame[i]
write.table(salarios)
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
estados <- salarios$UF
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame()
for(i in estados)
regiao[i] = regiaoFrame[i]
regiaoFrame
regiao
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame(Regiao = c())
for(i in estados)
regiao[i] = regiaoFrame[i]
regiao <- data.frame(Regiao = c(regiaoFrame[i]))
regiaoFrame <- data.frame("AL" = "Nordeste", "BA" = "Nordeste", "CE" = "Nordeste", "DF" = "Centro-oeste", "ES" = "Sudeste", "GO" = "Centro-oeste", "MG" = "Sudeste", "MT" = "Centro-oeste", "PA" = "Norte", "PE" = "Nordeste", "PR" = "Sul", "RJ" = "Sudeste", "RO" = "Norte", "RS" = "Sul", "SC" = "Sul", "SE" = "Nordeste", "SP" = "Sudeste" )
regiao <- data.frame(Regiao = c())
for(i in estados)
regiao <- data.frame(Regiao = c(regiaoFrame[i]))
i
for(i in estados)
i
for(i in estados)
print i
print (i)
for(i in estados)
print (i)
setwd("/home/celio/Downloads/ccc/ccc-analytics-2.0")
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\data" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
write.csv(discMaisComumPeriodo, file = "data/maiores_frequencias_por_disciplina.csv", row.names = FALSE, quote = FALSE)
blocMaisComum1 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq1st)),]
blocMaisComum2 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq2nd)),]
blocMaisComum3 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq3rd)),]
View(blocMaisComum1)
View(blocMaisComum2)
View(blocMaisComum3)
View(blocMaisComum1)
View(blocMaisComum1)
View(blocMaisComum2)
View(blocMaisComum3)
View(blocMaisComum1)
View(discMaisComumPeriodo)
View(blocMaisComum1)
discMaisComumPeriodo[, "QuantDeAlunosPorDisciplina"] = totalFreq
View(discMaisComumPeriodo)
write.csv(discMaisComumPeriodo, file = "data/maiores_frequencias_por_disciplina.csv", row.names = FALSE, quote = FALSE)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas_periodo.csv')
install.packages("reshape")
require(plyr)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
View(discMaisComumPeriodo)
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
write.csv(discMaisComumPeriodo, file = "data/maiores_frequencias_por_disciplina.csv", row.names = FALSE, quote = FALSE)
View(discMaisComumPeriodo)
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
write.csv(discMaisComumPeriodo, file = "data/maiores_frequencias_por_disciplina.csv", row.names = FALSE, quote = FALSE)
blocMaisComum1 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq1st)),]
blocMaisComum2 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq2nd)),]
blocMaisComum3 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq3rd)),]
View(discMaisComumPeriodo)
View(discMaisComumPeriodo)
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunas = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunas][is.na(freqAbsluta[,colunas])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
fix(colunas)
rm(colunas)
fix(maiorFreq)
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
View(freqAbsluta)
View(discMaisComumPeriodo)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta função retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e está em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A saída seria 5 (quinto período).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\data" antes de esecutar este script
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
#write.csv(notaDisciplDF, file = "data/arquivo_notas_disciplinas_periodo.csv", row.names = FALSE, quote = FALSE)
View(notaDisciplDF)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta função retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e está em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A saída seria 5 (quinto período).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\data" antes de esecutar este script
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
write.csv(notaDisciplDF, file = "data/arquivo_notas_disciplinas_periodo.csv", row.names = FALSE, quote = FALSE)
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0\" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
write.csv(discMaisComumPeriodo, file = "data/maiores_frequencias_por_disciplina.csv", row.names = FALSE, quote = FALSE)
blocMaisComum1 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq1st)),]
blocMaisComum2 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq2nd)),]
blocMaisComum3 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq3rd)),]
cd ~
as
cd ~/
setwd(/home/celio/Desenvolvimento/ccc/ccc-analytics-2.0)
setwd("/home/celio/Desenvolvimento/ccc/ccc-analytics-2.0")
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
write.csv(discMaisComumPeriodo, file = "data/maiores_frequencias_por_disciplina.csv", row.names = FALSE, quote = FALSE)
blocMaisComum1 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq1st)),]
blocMaisComum2 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq2nd)),]
blocMaisComum3 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq3rd)),]
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
#Definições de funções úteis neste
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
freqAbsluta = read.csv('data/arquivo_frequencia_absoluta.csv')
#colunas que contem as frequencias dos períodos
colunasUteis = 3:18
#Substitui NA por 0 (ZERO) para operações aritmeticas
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um período letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("coddisciplina", "disciplina")]
discMaisComumPeriodo[, "PerMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PerMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PerMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
write.csv(discMaisComumPeriodo, file = "data/maiores_frequencias_por_disciplina.csv", row.names = FALSE, quote = FALSE)
blocMaisComum1 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq1st)),]
blocMaisComum2 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq2nd)),]
blocMaisComum3 = discMaisComumPeriodo[with(discMaisComumPeriodo, order(PerMaisFreq3rd)),]
View(discMaisComumPeriodo)
View(discMaisComumPeriodo)
# Dado um periodo letivo qualquer e o periodo de entrada no curso esta função retorna um numero que representa o periodo relativo ao periodo de entrada.
# O formato do periodo deve ser 3 digitos, os dois primeiros para o ano e o terceiro para o semestre.
# Ex. Um aluno entrou no curso no periodo 2011.1 e está em 2013.2, entao as entradas devem ser 111 e 132, respectivamente. A saída seria 5 (quinto período).
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
write.csv(notaDisciplDF, file = "data/arquivo_notas_disciplinas_periodo.csv", row.names = FALSE, quote = FALSE)
# Antes de executar este script, deve-se setar o Working Directory para "ccc-analytics-2.0 /" conforme seu repositório local
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas_periodo.csv')
install.packages("reshape")
require(plyr)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
write.csv(tabelaFrequencia, file = "data/arquivo_frequencia_absoluta.csv", row.names = FALSE, quote = FALSE)
calcularPeriodoRelativo <- function(pAtual, pEntrada){
result = 2 * (as.integer(substring(as.character(pAtual), 1, 2)) - as.integer(substring(as.character(pEntrada), 1, 2)))
result = result + (as.integer(substring(as.character(pAtual), 3, 3)) - as.integer(substring(as.character(pEntrada), 3, 3)))
result = result + 1
return(result)
}
#Deve-se setar o Working Directory, setwd(), para o diretório "ccc-analytics-2.0" antes de esecutar este script
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
notaDisciplDF[12] = notaDisciplDF$periodo
colnames(notaDisciplDF)[12] <- "PeriodoRelativo"
# Adiciona ao data.frame uma coluna com o periodo relativo.
notaDisciplDF$PeriodoRelativo = calcularPeriodoRelativo(substring(as.character(notaDisciplDF$periodo), 3,5), substring(as.character(notaDisciplDF$matricula), 2,4))
View(notaDisciplDF)
# Antes de executar este script, deve-se setar o Working Directory para "ccc-analytics-2.0 /" conforme seu repositório local
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas_periodo.csv')
install.packages("reshape")
require(plyr)
# Cria uma tabela com o codigo das disciplinas, o nome das disciplinas, o seu periodo relativo e a frenquencia absoluta de cada disciplina, todos em colunas
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
View(tabelaFrequencia)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas_periodo.csv')
require(plyr)
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
View(tabelaFrequencia)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
require(plyr)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina), nrow)
View(infoDisciplinas)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina))
View(infoDisciplinas)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
require(plyr)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina), nrow)
View(infoDisciplinas)
View(notaDisciplDF)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina), nrow, V1 = FALSE)
rm(infoDisciplinas[3])
infoDisciplinas <- ddply(notaDisciplDF, c(coddisciplina, disciplina), nrow)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina), nrow)
infoDisciplinas <- ddply(notaDisciplDF, (coddisciplina, disciplina), nrow)
infoDisciplinas[3] <- NULL
View(infoDisciplinas)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina), nrow)
infoDisciplinas[3] <- NULL
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas_periodo.csv')
tabelaFrequencia <- ddply(notaDisciplDF, .(coddisciplina, disciplina, PeriodoRelativo), nrow)
View(tabelaFrequencia)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
tabelaFrequencia <- tabelaFrequencia[with(tabelaFrequencia, order(PeriodoRelativo)), ]
View(tabelaFrequencia)
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
tabelaFrequencia <- reshape(tabelaFrequencia, idvar = c("coddisciplina", "disciplina"), timevar = "PeriodoRelativo", direction = "wide")
View(tabelaFrequencia)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
View(notaDisciplDF)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina, departamento), nrow)
infoDisciplinas[4] <- NULL
View(infoDisciplinas)
View(notaDisciplDF)
View(notaDisciplDF)
View(notaDisciplDF)
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina, departamento), nrow)
View(infoDisciplinas)
disciplinasObrigatorias = read.csv('data/grade-disciplinas-por-periodo.csv')
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina, departamento), nrow)
View(infoDisciplinas)
infoDisciplinas$V1 <- NULL
View(infoDisciplinas)
View(disciplinasObrigatorias)
View(disciplinasObrigatorias)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
require(plyr)
disciplinasObrigatorias <- c("1411167", "1411180", "1411174", "1109103", "1109035", "1307151", "1411168", "1411181", "1411170", "1109113", "1109053", "1305218", "1108089", "1411172", "1411179", "1411176", "1411171", "1114107", "1109049", "1108090", "1411175", "1411182", "1411169", "1114114", "1411173", "1411178", "1411177", "1411187", "1411190", "1411189", "1411193", "1411178", "1411183", "1305220", "1411192", "1411196", "1411191", "1411184", "1411194", "1305219", "1411188", "1411197", "1411185", "1411186")
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina, departamento), nrow)
infoDisciplinas[4] <- "optativa"
View(infoDisciplinas)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
require(plyr)
disciplinasObrigatorias <- c("1411167", "1411180", "1411174", "1109103", "1109035", "1307151", "1411168", "1411181", "1411170", "1109113", "1109053", "1305218", "1108089", "1411172", "1411179", "1411176", "1411171", "1114107", "1109049", "1108090", "1411175", "1411182", "1411169", "1114114", "1411173", "1411178", "1411177", "1411187", "1411190", "1411189", "1411193", "1411178", "1411183", "1305220", "1411192", "1411196", "1411191", "1411184", "1411194", "1305219", "1411188", "1411197", "1411185", "1411186")
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina, departamento), nrow)
infoDisciplinas[4] <- "Optativa"
infoDisciplinas[is.element(infoDisciplinas$coddisciplina,disciplinasObrigatorias),]$V1 = "Obrigatoria"
View(infoDisciplinas)
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
salarios$Regiao = ""
salarios <- read.csv("http://www.lsd.ufcg.edu.br/~marcus/analytics/dados/salarios-ti-formatted.csv")
View(salarios)
salarios$Regiao = ""
View(salarios)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
require(plyr)
disciplinasObrigatorias <- c("1411167", "1411180", "1411174", "1109103", "1109035", "1307151", "1411168", "1411181", "1411170", "1109113", "1109053", "1305218", "1108089", "1411172", "1411179", "1411176", "1411171", "1114107", "1109049", "1108090", "1411175", "1411182", "1411169", "1114114", "1411173", "1411178", "1411177", "1411187", "1411190", "1411189", "1411193", "1411178", "1411183", "1305220", "1411192", "1411196", "1411191", "1411184", "1411194", "1305219", "1411188", "1411197", "1411185", "1411186")
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina, departamento), nrow)
infoDisciplinas[4] <- "Optativa"
infoDisciplinas[is.element(infoDisciplinas$coddisciplina,disciplinasObrigatorias),]$V1 = "Obrigatoria"
infoDisciplinas <- rename(infoDisciplinas, replace = c("V1" = "TipoDeDisciplina"))
View(infoDisciplinas)
notaDisciplDF = read.csv('data/arquivo_notas_disciplinas.csv')
require(plyr)
disciplinasObrigatorias <- c("1411167", "1411180", "1411174", "1109103", "1109035", "1307151", "1411168", "1411181", "1411170", "1109113", "1109053", "1305218", "1108089", "1411172", "1411179", "1411176", "1411171", "1114107", "1109049", "1108090", "1411175", "1411182", "1411169", "1114114", "1411173", "1411178", "1411177", "1411187", "1411190", "1411189", "1411193", "1411178", "1411183", "1305220", "1411192", "1411196", "1411191", "1411184", "1411194", "1305219", "1411188", "1411197", "1411185", "1411186")
infoDisciplinas <- ddply(notaDisciplDF, .(coddisciplina, disciplina, departamento), nrow)
infoDisciplinas[4] <- "Optativa"
infoDisciplinas[is.element(infoDisciplinas$coddisciplina,disciplinasObrigatorias),]$V1 = "Obrigatoria"
infoDisciplinas <- rename(infoDisciplinas, replace = c("V1" = "TipoDeDisciplina"))
write.csv(infoDisciplinas, file = "data/arquivo_informacao_das_disciplinas.csv")
View(notaDisciplDF)
View(infoDisciplinas)
