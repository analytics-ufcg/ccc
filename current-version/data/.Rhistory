library(RODBC)
cn <- odbcConnect("VerticaDSN")
install.packages("RODBC")
install.packages("RODBC")
library(RODBC)
cn <- odbcConnect("VerticaDSN")
cn <- odbcConnect("VerticaDSN")
sqlTables(cn)
cn <- odbcConnect("VerticaDSN")
cn <- odbcConnect("VerticaDSN")
cn <- odbcConnect("Vertica")
D
cn <- odbcConnect("VerticaDSN")
library(RODBC)
cn <- odbcConnect("VerticaDSN")
info.disciplinas <- sqlQuery(cn, "select da.CodigoDisciplina, da.CodigoSituacao from DisciplinaAluno da")
info.disciplinas$Situacao[info.disciplinas$CodigoSituacao == 1] <- 0
info.disciplinas$Situacao[info.disciplinas$CodigoSituacao == 2 | info.disciplinas$CodigoSituacao == 3] <- 1
info.disciplinas <- subset(info.disciplinas, CodigoSituacao != 4) #Removendo as disciplinas trancadas!
info.disciplinas$Situacao = as.numeric(info.disciplinas$Situacao)
resultado.absoluto = aggregate(Situacao ~ CodigoDisciplina, data = info.disciplinas, sum)
resultado.relativo = aggregate(Situacao ~ CodigoDisciplina, data = info.disciplinas, mean)
info.disciplinas$CodigoSituacao = NULL
info.disciplinas$Situacao = NULL
info.disciplinas <- ddply(info.disciplinas, .(CodigoDisciplina), nrow)
info.disciplinas$V1 = NULL
resultado.absoluto = merge(info.disciplinas,resultado.absoluto, by=c("CodigoDisciplina"))
resultado.relativo = merge(info.disciplinas,resultado.relativo, by=c("CodigoDisciplina"))
resultado.absoluto <- rename(resultado.absoluto, replace = c("Situacao" = "ResultadoAbsoluto"))
resultado = cbind(resultado.absoluto, "ResultadoRelativo" = resultado.relativo$Situacao)
library(RODBC)
cn <- odbcConnect("VerticaDSN")
info.disciplinas <- sqlQuery(cn, "select da.CodigoDisciplina, da.CodigoSituacao from DisciplinaAluno da")
info.disciplinas$Situacao[info.disciplinas$CodigoSituacao == 1] <- 0
info.disciplinas$Situacao[info.disciplinas$CodigoSituacao == 2 | info.disciplinas$CodigoSituacao == 3] <- 1
info.disciplinas <- subset(info.disciplinas, CodigoSituacao != 4) #Removendo as disciplinas trancadas!
info.disciplinas$Situacao = as.numeric(info.disciplinas$Situacao)
resultado.absoluto = aggregate(Situacao ~ CodigoDisciplina, data = info.disciplinas, sum)
resultado.relativo = aggregate(Situacao ~ CodigoDisciplina, data = info.disciplinas, mean)
require(plyr)
info.disciplinas$CodigoSituacao = NULL
info.disciplinas$Situacao = NULL
info.disciplinas <- ddply(info.disciplinas, .(CodigoDisciplina), nrow)
info.disciplinas$V1 = NULL
resultado.absoluto = merge(info.disciplinas,resultado.absoluto, by=c("CodigoDisciplina"))
resultado.relativo = merge(info.disciplinas,resultado.relativo, by=c("CodigoDisciplina"))
resultado.absoluto <- rename(resultado.absoluto, replace = c("Situacao" = "ResultadoAbsoluto"))
resultado = cbind(resultado.absoluto, "ResultadoRelativo" = resultado.relativo$Situacao)
res <- sqlFetch(cn, "Reprovacoes")
View(res)
library(compare)
library(compare)
install.packages("compare")
library(compare)
compare(res, resultado, allowAll = TRUE)
library(RODBC)
cn <- odbcConnect("VerticaDSN")
info.disciplinas <- sqlQuery(cn, "select da.CodigoDisciplina, da.CodigoSituacao from DisciplinaAluno da")
info.disciplinas$Situacao[info.disciplinas$CodigoSituacao == 1] <- 0
info.disciplinas$Situacao[info.disciplinas$CodigoSituacao == 2 | info.disciplinas$CodigoSituacao == 3] <- 1
info.disciplinas <- subset(info.disciplinas, CodigoSituacao != 4) #Removendo as disciplinas trancadas!
info.disciplinas$Situacao = as.numeric(info.disciplinas$Situacao)
resultado.absoluto = aggregate(Situacao ~ CodigoDisciplina, data = info.disciplinas, sum)
resultado.relativo = aggregate(Situacao ~ CodigoDisciplina, data = info.disciplinas, mean)
require(plyr)
info.disciplinas$CodigoSituacao = NULL
info.disciplinas$Situacao = NULL
info.disciplinas <- ddply(info.disciplinas, .(CodigoDisciplina), nrow)
View(info.disciplinas)
info.disciplinas$V1 = NULL
View(info.disciplinas)
#    Ao sobrevoar uma disciplina, ela e suas correlacionadas devem se destacar.
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,2:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CODIGO")
mdata <- merge(mdata,grade,by.x="variable",by.y="CODIGO")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
#setwd("C:/Users/bac/Desktop/CCC Correlacao")
setwd("~/ccc/ccc-analytics-2.0/data")
setwd("/home/celio/Desenvolvimento/ccc/ccc-analytics-2.0/data")
library(RODBC)
channel <- odbcConnect("VerticaDSN")
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, de.NomeDepto, da.MatriculaAluno, da.Media, s.CodigoSituacao
from Disciplina d, DisciplinaAluno da, Departamento de, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and d.CodigoDepto = de.CodigoDepto and s.CodigoSituacao = da.CodigoSituacao")
infoAssi <- sqlQuery(channel, "select CodigoDisciplina, NomeDisciplina, Obrigatoria
from Disciplina where Obrigatoria = TRUE")
View(infoAssi)
View(notas)
View(infoAssi)
infoAssi <- sqlQuery(channel, "select CodigoDisciplina, NomeDisciplina
from Disciplina where Obrigatoria = TRUE")
View(infoAssi)
completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
View(completeData)
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, de.NomeDepto, da.MatriculaAluno, da.Media, s.CodigoSituacao
from Disciplina d, DisciplinaAluno da, Departamento de, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and d.CodigoDepto = de.CodigoDepto and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and  s.CodigoSituacao != 4")
View(notas)
infoAssi <- sqlQuery(channel, "select CodigoDisciplina, NomeDisciplina
from Disciplina where Obrigatoria = TRUE")
completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
View(completeData)
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, da.MatriculaAluno, da.Media, s.CodigoSituacao
from Disciplina d, DisciplinaAluno da, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and  s.CodigoSituacao != 4")
View(notas)
completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
View(completeData)
View(notas)
View(completeData)
View(infoAssi)
View(completeData)
View(infoAssi)
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, da.MatriculaAluno, da.Media
from Disciplina d, DisciplinaAluno da, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and s.CodigoSituacao != 4")
View(notas)
library(RODBC)
channel <- odbcConnect("VerticaDSN")
#    Ao selecionar a opção de analisar correlação de desempenho,
#    o fluxograma do curso deve mostrar que pares disciplinas têm correlação nas notas dos alunos que as cursaram.
#    O sistema deve informar tanto correlação positiva quanto negativa. Deve haver uma escala divergente que mostra isso claramente.
#    Ao sobrevoar uma disciplina, ela e suas correlacionadas devem se destacar.
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,2:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CODIGO")
mdata <- merge(mdata,grade,by.x="variable",by.y="CODIGO")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
setwd("~/ccc/ccc-analytics-2.0/data")
#notas <- read.csv("historico-ccc.csv", header = TRUE, sep=",")
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, da.MatriculaAluno, da.Media
from Disciplina d, DisciplinaAluno da, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and s.CodigoSituacao != 4")
#infoAssi <- read.csv("arquivo_informacao_das_disciplinas.csv", header = TRUE, sep=",")
infoAssi <- sqlQuery(channel, "select CodigoDisciplina, NomeDisciplina
from Disciplina where Obrigatoria = TRUE")
# seleciona somente as colunas ditas
#infoAssi <- infoAssi[c("CODIGO","DISCIPLINA","TIPODEDISCIPLINA")]
# adiciona a coluna do tipo da disciplina
#completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
# filtra o data frame com as disciplinas obrigatorias
#filterFrame <- subset(completeData,TIPODEDISCIPLINA == "OBG")
# seleciona apenas as colunas que interessam (media, codigo e nome da disciplina e a matricula do aluno)
filterFrame <- notas[c("CodigoDisciplina","Media","MatriculaAluno")]
# corrige a disposi??o do dataframe
finalFrame = reshape(filterFrame, timevar = "CodigoDisciplina", idvar = "MatriculaAluno", direction = "wide")
# calcula a correla??o
corMatrix_spearman = cor(finalFrame[2:45],use="pairwise.complete.obs",method="spearman")
corMatrix_kendall = cor(finalFrame[2:45],use="pairwise.complete.obs",method="kendall")
#corMatrix_spearman <- read.csv("US06_matrizCorrelacao_spearman.csv", header = TRUE, sep=",")
#corMatrix_kendall <- read.csv("US06_matrizCorrelacao_kendall.csv", header = TRUE, sep=",")
#grade <- read.csv("grade-disciplinas-por-periodo.csv", header = TRUE, sep=",")
#grade = grade[c("DISCIPLINA","CODIGO")]
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
mdata4 = formataMatrizCorrelacao(corMatrix_kendall, infoAssi, 0.5, -0.5)
#write.csv(mdata3, "US06_matrizCorrelacaoFiltrada_spearman.csv",row.names=FALSE)
#write.csv(mdata4, "US06_matrizCorrelacaoFiltrada_kendall.csv",row.names=FALSE)
close(channel)
library(RODBC)
channel <- odbcConnect("VerticaDSN")
#    Ao selecionar a opção de analisar correlação de desempenho,
#    o fluxograma do curso deve mostrar que pares disciplinas têm correlação nas notas dos alunos que as cursaram.
#    O sistema deve informar tanto correlação positiva quanto negativa. Deve haver uma escala divergente que mostra isso claramente.
#    Ao sobrevoar uma disciplina, ela e suas correlacionadas devem se destacar.
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,2:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CodigoDisciplina")
mdata <- merge(mdata,grade,by.x="variable",by.y="CodigoDisciplina")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
setwd("~/ccc/ccc-analytics-2.0/data")
#notas <- read.csv("historico-ccc.csv", header = TRUE, sep=",")
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, da.MatriculaAluno, da.Media
from Disciplina d, DisciplinaAluno da, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and s.CodigoSituacao != 4")
#infoAssi <- read.csv("arquivo_informacao_das_disciplinas.csv", header = TRUE, sep=",")
infoAssi <- sqlQuery(channel, "select CodigoDisciplina, NomeDisciplina
from Disciplina where Obrigatoria = TRUE")
# seleciona somente as colunas ditas
#infoAssi <- infoAssi[c("CODIGO","DISCIPLINA","TIPODEDISCIPLINA")]
# adiciona a coluna do tipo da disciplina
#completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
# filtra o data frame com as disciplinas obrigatorias
#filterFrame <- subset(completeData,TIPODEDISCIPLINA == "OBG")
# seleciona apenas as colunas que interessam (media, codigo e nome da disciplina e a matricula do aluno)
filterFrame <- notas[c("CodigoDisciplina","Media","MatriculaAluno")]
# corrige a disposi??o do dataframe
finalFrame = reshape(filterFrame, timevar = "CodigoDisciplina", idvar = "MatriculaAluno", direction = "wide")
# calcula a correla??o
corMatrix_spearman = cor(finalFrame[2:45],use="pairwise.complete.obs",method="spearman")
corMatrix_kendall = cor(finalFrame[2:45],use="pairwise.complete.obs",method="kendall")
#corMatrix_spearman <- read.csv("US06_matrizCorrelacao_spearman.csv", header = TRUE, sep=",")
#corMatrix_kendall <- read.csv("US06_matrizCorrelacao_kendall.csv", header = TRUE, sep=",")
#grade <- read.csv("grade-disciplinas-por-periodo.csv", header = TRUE, sep=",")
#grade = grade[c("DISCIPLINA","CODIGO")]
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
mdata4 = formataMatrizCorrelacao(corMatrix_kendall, infoAssi, 0.5, -0.5)
#write.csv(mdata3, "US06_matrizCorrelacaoFiltrada_spearman.csv",row.names=FALSE)
#write.csv(mdata4, "US06_matrizCorrelacaoFiltrada_kendall.csv",row.names=FALSE)
close(channel)
library(RODBC)
channel <- odbcConnect("VerticaDSN")
#    Ao selecionar a opção de analisar correlação de desempenho,
#    o fluxograma do curso deve mostrar que pares disciplinas têm correlação nas notas dos alunos que as cursaram.
#    O sistema deve informar tanto correlação positiva quanto negativa. Deve haver uma escala divergente que mostra isso claramente.
#    Ao sobrevoar uma disciplina, ela e suas correlacionadas devem se destacar.
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,2:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CodigoDisciplina")
mdata <- merge(mdata,grade,by.x="variable",by.y="CodigoDisciplina")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
#setwd("~/ccc/ccc-analytics-2.0/data")
#notas <- read.csv("historico-ccc.csv", header = TRUE, sep=",")
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, da.MatriculaAluno, da.Media
from Disciplina d, DisciplinaAluno da, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and s.CodigoSituacao != 4")
#infoAssi <- read.csv("arquivo_informacao_das_disciplinas.csv", header = TRUE, sep=",")
infoAssi <- sqlQuery(channel, "select NomeDisciplina, CodigoDisciplina
from Disciplina where Obrigatoria = TRUE")
# seleciona somente as colunas ditas
#infoAssi <- infoAssi[c("CODIGO","DISCIPLINA","TIPODEDISCIPLINA")]
# adiciona a coluna do tipo da disciplina
#completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
# filtra o data frame com as disciplinas obrigatorias
#filterFrame <- subset(completeData,TIPODEDISCIPLINA == "OBG")
# seleciona apenas as colunas que interessam (media, codigo e nome da disciplina e a matricula do aluno)
filterFrame <- notas[c("CodigoDisciplina","Media","MatriculaAluno")]
# corrige a disposi??o do dataframe
finalFrame = reshape(filterFrame, timevar = "CodigoDisciplina", idvar = "MatriculaAluno", direction = "wide")
# calcula a correla??o
corMatrix_spearman = cor(finalFrame[2:45],use="pairwise.complete.obs",method="spearman")
corMatrix_kendall = cor(finalFrame[2:45],use="pairwise.complete.obs",method="kendall")
#corMatrix_spearman <- read.csv("US06_matrizCorrelacao_spearman.csv", header = TRUE, sep=",")
#corMatrix_kendall <- read.csv("US06_matrizCorrelacao_kendall.csv", header = TRUE, sep=",")
#grade <- read.csv("grade-disciplinas-por-periodo.csv", header = TRUE, sep=",")
#grade = grade[c("DISCIPLINA","CODIGO")]
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
mdata4 = formataMatrizCorrelacao(corMatrix_kendall, infoAssi, 0.5, -0.5)
#write.csv(mdata3, "US06_matrizCorrelacaoFiltrada_spearman.csv",row.names=FALSE)
#write.csv(mdata4, "US06_matrizCorrelacaoFiltrada_kendall.csv",row.names=FALSE)
close(channel)
View(corMatrix_kendall)
View(infoAssi)
View(corMatrix_kendall)
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 1:length(matrizCorrelacao)) {
data2[i,1:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CodigoDisciplina")
mdata <- merge(mdata,grade,by.x="variable",by.y="CodigoDisciplina")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,1:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CodigoDisciplina")
mdata <- merge(mdata,grade,by.x="variable",by.y="CodigoDisciplina")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
corMatrix_spearman = cor(finalFrame[2:45],use="pairwise.complete.obs",method="spearman")
View(corMatrix_spearman)
corMatrix_spearman <- read.csv("US06_matrizCorrelacao_spearman.csv", header = TRUE, sep=",")
View(corMatrix_spearman)
corMatrix_kendall1 <- read.csv("US06_matrizCorrelacao_kendall.csv", header = TRUE, sep=",")
View(corMatrix_kendall1)
View(corMatrix_kendall)
View(corMatrix_kendall1)
View(corMatrix_kendall)
View(corMatrix_kendall1)
View(corMatrix_kendall)
View(corMatrix_kendall1)
corMatrix_spearman = cor(finalFrame[2:44],use="pairwise.complete.obs",method="spearman")
library(RODBC)
channel <- odbcConnect("VerticaDSN")
#    Ao selecionar a opção de analisar correlação de desempenho,
#    o fluxograma do curso deve mostrar que pares disciplinas têm correlação nas notas dos alunos que as cursaram.
#    O sistema deve informar tanto correlação positiva quanto negativa. Deve haver uma escala divergente que mostra isso claramente.
#    Ao sobrevoar uma disciplina, ela e suas correlacionadas devem se destacar.
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,1:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CodigoDisciplina")
mdata <- merge(mdata,grade,by.x="variable",by.y="CodigoDisciplina")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
#setwd("~/ccc/ccc-analytics-2.0/data")
#notas <- read.csv("historico-ccc.csv", header = TRUE, sep=",")
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, da.MatriculaAluno, da.Media
from Disciplina d, DisciplinaAluno da, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and s.CodigoSituacao != 4")
#infoAssi <- read.csv("arquivo_informacao_das_disciplinas.csv", header = TRUE, sep=",")
infoAssi <- sqlQuery(channel, "select NomeDisciplina, CodigoDisciplina
from Disciplina where Obrigatoria = TRUE")
# seleciona somente as colunas ditas
#infoAssi <- infoAssi[c("CODIGO","DISCIPLINA","TIPODEDISCIPLINA")]
# adiciona a coluna do tipo da disciplina
#completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
# filtra o data frame com as disciplinas obrigatorias
#filterFrame <- subset(completeData,TIPODEDISCIPLINA == "OBG")
# seleciona apenas as colunas que interessam (media, codigo e nome da disciplina e a matricula do aluno)
filterFrame <- notas[c("CodigoDisciplina","Media","MatriculaAluno")]
# corrige a disposi??o do dataframe
finalFrame = reshape(filterFrame, timevar = "CodigoDisciplina", idvar = "MatriculaAluno", direction = "wide")
# calcula a correla??o
corMatrix_spearman = cor(finalFrame[2:45],use="pairwise.complete.obs",method="spearman")
corMatrix_kendall = cor(finalFrame[2:45],use="pairwise.complete.obs",method="kendall")
View(corMatrix_kendall)
View(corMatrix_spearman)
View(finalFrame)
disciplinas <- sqlFetch("Disciplnas")
disciplinas <- sqlFetch(cn,"Disciplnas")
disciplinas <- sqlFetch(channel,"Disciplnas")
disciplinas <- sqlFetch(channel,"Disciplinas")
disciplinas <- sqlFetch(channel,"Disciplina")
View(disciplinas)
View(infoAssi)
close(channel)
library(RODBC)
channel <- odbcConnect("VerticaDSN")
#    Ao selecionar a opção de analisar correlação de desempenho,
#    o fluxograma do curso deve mostrar que pares disciplinas têm correlação nas notas dos alunos que as cursaram.
#    O sistema deve informar tanto correlação positiva quanto negativa. Deve haver uma escala divergente que mostra isso claramente.
#    Ao sobrevoar uma disciplina, ela e suas correlacionadas devem se destacar.
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,1:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CodigoDisciplina")
mdata <- merge(mdata,grade,by.x="variable",by.y="CodigoDisciplina")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
#setwd("~/ccc/ccc-analytics-2.0/data")
#notas <- read.csv("historico-ccc.csv", header = TRUE, sep=",")
notas <- sqlQuery(channel, "select da.Periodo, da.CodigoDisciplina,  d.NomeDisciplina, da.MatriculaAluno, da.Media
from Disciplina d, DisciplinaAluno da, Situacao s
where d.CodigoDisciplina = da.CodigoDisciplina and s.CodigoSituacao = da.CodigoSituacao and s.CodigoSituacao != 3 and s.CodigoSituacao != 4 and d.Obrigatoria = TRUE")
#infoAssi <- read.csv("arquivo_informacao_das_disciplinas.csv", header = TRUE, sep=",")
infoAssi <- sqlQuery(channel, "select NomeDisciplina, CodigoDisciplina
from Disciplina where Obrigatoria = TRUE")
# seleciona somente as colunas ditas
#infoAssi <- infoAssi[c("CODIGO","DISCIPLINA","TIPODEDISCIPLINA")]
# adiciona a coluna do tipo da disciplina
#completeData <- merge(notas,infoAssi[c("CodigoDisciplina")],by="CodigoDisciplina")
# filtra o data frame com as disciplinas obrigatorias
#filterFrame <- subset(completeData,TIPODEDISCIPLINA == "OBG")
# seleciona apenas as colunas que interessam (media, codigo e nome da disciplina e a matricula do aluno)
filterFrame <- notas[c("CodigoDisciplina","Media","MatriculaAluno")]
# corrige a disposi??o do dataframe
finalFrame = reshape(filterFrame, timevar = "CodigoDisciplina", idvar = "MatriculaAluno", direction = "wide")
# calcula a correla??o
corMatrix_spearman = cor(finalFrame[2:45],use="pairwise.complete.obs",method="spearman")
corMatrix_kendall = cor(finalFrame[2:45],use="pairwise.complete.obs",method="kendall")
View(corMatrix_kendall)
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
library(reshape)
formataMatrizCorrelacao <- function(matrizCorrelacao,grade,value1,value2){
data2 = matrizCorrelacao
for (i in 2:length(matrizCorrelacao)) {
data2[i-1,2:i] = NA
}
data = data2
mdata <- melt(data, id=c("X"))
mdata$X <- substring(mdata$X, 7)
mdata$variable <- substring(mdata$variable, 7)
mdata <- merge(mdata,grade,by.x="X",by.y="CodigoDisciplina")
mdata <- merge(mdata,grade,by.x="variable",by.y="CodigoDisciplina")
mdata1 <- subset(mdata,X != variable)
mdata2<- subset(mdata1,value > value1 | value <value2)
mdata2 <- mdata2[with(mdata2, order(-value)), ]
colnames(mdata2) <- c("cod1","cod2","cor","disc1","disc2")
mdata3<- subset(mdata2,cor != 1.0 & cor != -1.0)
mdata3
}
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
View(finalFrame)
mdata3 = formataMatrizCorrelacao(corMatrix_spearman, infoAssi, 0.5, -0.5)
View(corMatrix_kendall)
library(RODBC)
channel <- odbcConnect("VerticaDSN")
freqAbsluta <- sqlQuery(channel, "select da.CodigoDisciplina,  d.NomeDisciplina, da.PeriodoRelativo
from Disciplina d, DisciplinaAluno da
where d.CodigoDisciplina = da.CodigoDisciplina")
freqAbsluta <- ddply(freqAbsluta, .(CodigoDisciplina, NomeDisciplina, PeriodoRelativo), nrow)
#Ordena a tabela criada pelo periodo relativo, ainda em coluna
freqAbsluta <- freqAbsluta[with(freqAbsluta, order(PeriodoRelativo)), ]
colunasUteis = 3:18
# Alterna os periodos relativos para linha, criando assim os 16 periodos do curso e ja colocando a sua frequencia absoluta no local que lhe cabe
freqAbsluta <- reshape(freqAbsluta, idvar = c("CodigoDisciplina", "NomeDisciplina"), timevar = "PeriodoRelativo", direction = "wide")
freqAbsluta[,colunasUteis][is.na(freqAbsluta[,colunasUteis])] = 0
#Frequencia Relativa
maxn <- function(n) function(x) order(x, decreasing = TRUE)[n]
valorMaxn <- function(n) function(x) x[order(x, decreasing = TRUE)][n]
require(plyr)
#Vetor com a maior frequencia da disciplina observada em um periodo letivo
maiorFreq = apply(freqAbsluta[colunasUteis], 1, max)
#Vetor com a soma de todas as frequencias de periodos letivos da disciplina
totalFreq = rowSums(freqAbsluta[colunasUteis])
discMaisComumPeriodo = freqAbsluta[, c("CodigoDisciplina", "NomeDisciplina")]
discMaisComumPeriodo[, "PeriodoMaisFreq1st"] = apply(freqAbsluta[colunasUteis], 1, which.max)
discMaisComumPeriodo[, "FreqRelativa1st"] = maiorFreq / totalFreq
discMaisComumPeriodo[, "PeriodoMaisFreq2nd"] = apply(freqAbsluta[colunasUteis], 1, maxn(2))
discMaisComumPeriodo[, "FreqRelativa2nd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(2))) / totalFreq
discMaisComumPeriodo[, "PeriodoMaisFreq3rd"] = apply(freqAbsluta[colunasUteis], 1, maxn(3))
discMaisComumPeriodo[, "FreqRelativa3rd"] = (apply(freqAbsluta[colunasUteis], 1, valorMaxn(3))) / totalFreq
discMaisComumPeriodo[, "TotalDeAlunosPorDisciplina"] = totalFreq
View(discMaisComumPeriodo)
